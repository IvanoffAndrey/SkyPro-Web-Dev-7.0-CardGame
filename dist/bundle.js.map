{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://skypro-web-dev-7.0-cardgame/./src/index.js","webpack://skypro-web-dev-7.0-cardgame/./src/cardgame.js"],"sourcesContent":["import { CardGame } from './cardgame.js';\r\nconst game = new CardGame(document.querySelector('.game'));\r\n","export class CardGame {\n    constructor(element) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error('Передан не HTMLElement');\n        }\n\n        this.element = element;\n        this.difficulty = '';\n        this.levels = {\n            1: 6,\n            2: 12,\n            3: 18,\n        };\n\n        this.start();\n    }\n\n    start() {\n        this.element.innerHTML = '';\n\n        const startWindow = document.createElement('div');\n        startWindow.classList.add('game__start-window');\n\n        const header = document.createElement('h1');\n        header.classList.add('game__header');\n        header.textContent = 'Выбери сложность';\n\n        const menuDifficulty = document.createElement('div');\n        menuDifficulty.classList.add('game__menu-difficulty');\n        for (let i = 1; i <= 3; i++) {\n            let buttonDifficulty = document.createElement('button');\n            buttonDifficulty.classList.add('difficulty');\n            buttonDifficulty.textContent = `${i}`;\n            buttonDifficulty.setAttribute('data-difficulty', `${i}`);\n            menuDifficulty.appendChild(buttonDifficulty);\n        }\n        let buttonsDifficulty = menuDifficulty.querySelectorAll('.difficulty');\n\n        const startButton = document.createElement('button');\n        startButton.classList.add('game__button', 'game__button_start');\n        startButton.textContent = 'Старт';\n\n        const warning = document.createElement('p');\n        warning.textContent = 'Выберите сложность';\n        warning.classList.add('warning', 'warning_hidden');\n\n        startWindow.appendChild(header);\n        startWindow.appendChild(menuDifficulty);\n        startWindow.appendChild(startButton);\n        startWindow.appendChild(warning);\n        this.element.appendChild(startWindow);\n\n        menuDifficulty.addEventListener('click', (event) => {\n            const target = event.target;\n            this.difficulty = target.dataset.difficulty;\n            console.log(this.difficulty);\n\n            buttonsDifficulty.forEach((button) => {\n                if (button.dataset.difficulty == this.difficulty) {\n                    button.classList.add('difficulty_active');\n                    warning.classList.add('warning_hidden');\n                } else {\n                    button.classList.remove('difficulty_active');\n                }\n            });\n        });\n\n        startButton.addEventListener('click', () => {\n            if (this.difficulty === '' || this.difficulty === undefined) {\n                warning.classList.remove('warning_hidden');\n            } else {\n                this.gameWindow();\n            }\n        });\n    }\n\n    gameWindow() {\n        console.log('загрузка');\n\n        const cardsArr = [\n            '6C',\n            '6D',\n            '6H',\n            '6S',\n            '7C',\n            '7D',\n            '7H',\n            '7S',\n            '8C',\n            '8D',\n            '8H',\n            '8S',\n            '9C',\n            '9D',\n            '9H',\n            '9S',\n            'TC',\n            'TD',\n            'TH',\n            'TS',\n            'JC',\n            'JD',\n            'JH',\n            'JS',\n            'QC',\n            'QD',\n            'QH',\n            'QS',\n            'KC',\n            'KD',\n            'KH',\n            'KS',\n            'AC',\n            'AD',\n            'AH',\n            'AS',\n        ];\n        let cardsInGame = [];\n\n        this.element.innerHTML = '';\n        this.element.classList.add('position-top');\n\n        const menuGame = document.createElement('div');\n        menuGame.classList.add('game__menu');\n\n        const gameTime = document.createElement('div');\n        gameTime.classList.add('game__time');\n\n        const gameTimeTitles = document.createElement('div');\n        gameTimeTitles.classList.add('game__time-titles');\n\n        const gameTimeTitlesMin = document.createElement('div');\n        gameTimeTitlesMin.classList.add(\n            'game__time-title',\n            'game__time-title_min'\n        );\n        gameTimeTitlesMin.textContent = 'min';\n\n        const gameTimeTitlesSec = document.createElement('div');\n        gameTimeTitlesSec.classList.add(\n            'game__time-title',\n            'game__time-title_sec'\n        );\n        gameTimeTitlesSec.textContent = 'sec';\n\n        const gameTimeDigits = document.createElement('div');\n        gameTimeDigits.classList.add('game__time-digits');\n        gameTimeDigits.textContent = '00.00';\n\n        gameTimeTitles.appendChild(gameTimeTitlesMin);\n        gameTimeTitles.appendChild(gameTimeTitlesSec);\n        gameTime.appendChild(gameTimeTitles);\n        gameTime.appendChild(gameTimeDigits);\n\n        const buttonPlayAgain = document.createElement('button');\n        buttonPlayAgain.classList.add(\n            'game__button',\n            'game__button_play-again'\n        );\n        buttonPlayAgain.textContent = 'Начать заново';\n\n        menuGame.appendChild(gameTime);\n        menuGame.appendChild(buttonPlayAgain);\n\n        const cardField = document.createElement('div');\n        cardField.classList.add('game__card-field');\n\n        for (let i = 1; i <= this.levels[this.difficulty] / 2; i++) {\n            let card = cardsArr[Math.floor(Math.random() * cardsArr.length)];\n            cardsInGame.push(card);\n        }\n\n        cardsInGame = cardsInGame.concat(cardsInGame);\n        cardsInGame = cardsInGame.sort(() => Math.random() - 0.5);\n        console.log(cardsInGame);\n\n        for (let i = 0; i <= this.levels[this.difficulty] - 1; i++) {\n            let card = document.createElement('div');\n            card.classList.add('game__card');\n            const cardBack = document.createElement('img');\n            cardBack.setAttribute('src', './static/img/shirt.svg');\n            cardBack.classList.add('card');\n            card.appendChild(cardBack);\n            cardBack.setAttribute('data-card', `${cardsInGame[i]}`);\n            cardField.appendChild(card);\n        }\n\n        this.element.appendChild(menuGame);\n        this.element.appendChild(cardField);\n\n        let cards = document.querySelectorAll('.card');\n        buttonPlayAgain.addEventListener('click', () => {\n            this.element.classList.remove('position-top');\n            this.start();\n        });\n\n        setTimeout(() => {\n            cards.forEach((item) => {\n                item.setAttribute(\n                    'src',\n                    `./static/img/${item.dataset.card}.svg`\n                );\n                this.gameStart();\n            });\n        }, 1000);\n    }\n\n    gameStart() {\n        console.log('игра');\n        let cards = document.querySelectorAll('.card');\n        setTimeout(() => {\n            cards.forEach((item) => {\n                item.setAttribute('src', './static/img/shirt.svg');\n            });\n            this.cardСompare();\n        }, 5000);\n    }\n\n    cardСompare() {\n        let cardFirst = '';\n        let cardSecond = '';\n        let cardOpen = 0;\n        console.log(this.levels[this.difficulty]);\n        const field = document.querySelector('.game__card-field');\n        field.addEventListener('click', (event) => {\n            let target = event.target;\n            if (target.dataset.card && cardFirst === '') {\n                target.setAttribute(\n                    'src',\n                    `./static/img/${target.dataset.card}.svg`\n                );\n                cardFirst = target.dataset.card;\n                cardOpen++;\n                console.log(cardOpen);\n            } else if (\n                target.dataset.card &&\n                cardFirst !== '' &&\n                cardSecond === ''\n            ) {\n                target.setAttribute(\n                    'src',\n                    `./static/img/${target.dataset.card}.svg`\n                );\n                cardSecond = target.dataset.card;\n                cardOpen++;\n                console.log(cardOpen);\n\n                if (cardFirst === cardSecond) {\n                    cardFirst = '';\n                    cardSecond = '';\n                    if (cardOpen === this.levels[this.difficulty]) {\n                        this.win();\n                    }\n                } else {\n                    this.lose();\n                }\n            }\n        });\n    }\n\n    win() {\n        alert('победа');\n    }\n\n    lose() {\n        alert('проиграл');\n    }\n}\n"],"names":["constructor","element","HTMLElement","Error","this","difficulty","levels","start","innerHTML","startWindow","document","createElement","classList","add","header","textContent","menuDifficulty","i","buttonDifficulty","setAttribute","appendChild","buttonsDifficulty","querySelectorAll","startButton","warning","addEventListener","event","target","dataset","console","log","forEach","button","remove","undefined","gameWindow","cardsArr","cardsInGame","menuGame","gameTime","gameTimeTitles","gameTimeTitlesMin","gameTimeTitlesSec","gameTimeDigits","buttonPlayAgain","cardField","card","Math","floor","random","length","push","concat","sort","cardBack","cards","setTimeout","item","gameStart","cardFirst","cardSecond","cardOpen","querySelector","win","lose","alert"],"sourceRoot":""}